# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Portal Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
      #        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
      #        settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: read versions
        id: versions
        run: |
          set -x
          RELEASE_VERSION=$(scripts/get-release-version.sh)
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_OUTPUT
          echo "DOCKER_TAGS=nbdatatools/nosqlbench:${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "DOCKER_TAGS=nbdatatools/nosqlbench:${RELEASE_VERSION}" >> $GITHUB_OUTPUT

#
#      - name: set default gpg key
#        run: |
#          echo 'default-key:0:"53B2125BD35458CCD4EE09DF462ADC08EEAA2F8E' | gpgconf --change-options gpg

      - name: configure maven servers
        uses: s4u/maven-settings-action@v3.1.0
        with:
          servers: |
            [
            {
                "id": "central",
                "username": "${{ secrets.PORTAL_USERNAME }}",
                "password": "${{ secrets.PORTAL_PASSWORD }}"
            },
            {
                "id": "gpg.passphrase",
                "username": "nosqlbenchdroid@gmail.com",
                "passphrase": "${{ secrets.GPG_PASSPHRASE }}"
            }
            ]

      - name: Build with Maven
        run: mvn -X -B deploy -Drevision="${{ steps.versions.outputs.RELEASE_VERSION }}"

#    - name: Publish to GitHub Packages Apache Maven
#      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
