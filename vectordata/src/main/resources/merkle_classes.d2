# Core Merkle Tree Classes
MerkleTreeFile: {
  shape: class
  
  -treeData: ByteBuffer
  -footer: MerkleTreeFooter
  -leafBoundaries: List<Long>
  
  +create(Path): MerkleTreeFile
  +load(Path): MerkleTreeFile
  +save(Path): void
}

MerkleTreeFooter: {
  shape: class
  
  -version: int
  -flags: int
  -hashAlgorithmId: int
  -hashDigestLength: int
}

MerkleTreeReconciler: {
  shape: class
  
  +findDifferences(): List<ReconciliationTask>
  +compareFiles(): List<ReconciliationTask>
}

MerkleTreeReconciliationHandler: {
  shape: class
  
  +reconcile(): void
  -reconcileSection(): void
}

# Download Related Classes
MerkleDownloadBuilder: {
  shape: class
  
  +forUrl(): MerkleDownloadBuilder
  +toPath(): MerkleDownloadBuilder
  +withSpanSize(): MerkleDownloadBuilder
  +start(): CompletableFuture
}

MerkleDownloadOperation: {
  shape: class
  
  -config: MerkleDownloadConfig
  -executor: ExecutorService
  
  +execute(): CompletableFuture
  -downloadMerkleTree(): MerkleTreeFile
  -downloadWithChunks(): MerkleDownloadResult
  -downloadDirect(): MerkleDownloadResult
}

MerkleDownloadConfig: {
  shape: class
  
  +sourceUrl: URL
  +merkleUrl: URL
  +targetPath: Path
  +spanMode: SpanMode
  +targetSpanSize: long
}

# Result & Progress Classes
MerkleDownloadResult: {
  shape: class
  
  +targetPath: Path
  +bytesProcessed: long
  +timeElapsedMs: long
  +successful: boolean
  +error: Throwable
}

ReconciliationProgress: {
  shape: class
  
  +bytesProcessed: long
  +totalBytes: long
  +progressPercent: double
}

ReconciliationComplete: {
  shape: class
  
  +totalBytesProcessed: long
  +timeElapsedMs: long
  +successful: boolean
  +error: Throwable
}

# Relationships
MerkleTreeFile -> MerkleTreeFooter: contains
MerkleDownloadOperation -> MerkleDownloadConfig: uses
MerkleDownloadOperation -> MerkleTreeFile: creates/uses
MerkleDownloadBuilder -> MerkleDownloadConfig: builds
MerkleDownloadBuilder -> MerkleDownloadOperation: creates
MerkleDownloadOperation -> MerkleDownloadResult: produces
MerkleDownloadOperation -> ReconciliationProgress: reports
MerkleDownloadOperation -> ReconciliationComplete: reports
MerkleTreeReconciler -> MerkleTreeReconciliationHandler: uses
MerkleTreeReconciliationHandler -> ReconciliationProgress: reports

# Style
style: {
  fill: "#f5f5f5"
  stroke: "#333333"
  font-size: 14
  stroke-width: 2
}

classes: {
  style: {
    fill: "#ffffff"
    stroke: "#000000"
    stroke-width: 1
  }
}